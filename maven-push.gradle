def ossrhUsername = findProperty('OSSRH_USERNAME')
def ossrhPassword = findProperty('OSSRH_PASSWORD')
def signingKey = findProperty('SIGNING_KEY')
def signingKeyPwd = findProperty('SIGNING_KEY_PWD')

publishing {
    publications {
        release(MavenPublication) {
            from components.java
            // You can then customize attributes of the publication as shown below.
            groupId = 'com.what3words'
            artifactId = 'w3w-java-wrapper'
            this.version = version

            pom {
                name = 'w3w-java-wrapper'
                description = 'Java library for what3words REST API.'
                url = 'https://github.com/what3words/w3w-java-wrapper'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://github.com/what3words/w3w-java-wrapper/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'what3words'
                        name = 'what3words'
                        email = 'development@what3words.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/what3words/w3w-java-wrapper.git'
                    developerConnection = 'scm:git:ssh://git@github.com:what3words/w3w-java-wrapper.git'
                    url = 'https://github.com/what3words/w3w-java-wrapper'
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(signingKey, signingKeyPwd)
    sign publishing.publications
}